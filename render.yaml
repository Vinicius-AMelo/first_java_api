services:
  app:
    image: .
    envVars:
      - key: "PORT"
        value: "8080"
    # set any other environment variables you need
    # see https://render.com/docs/deploy-spring-boot#configure-environment-variables
    # for more details
    routes:
      - src: "/"
        dst: "http://app:8080"
    # if you need to add additional routes, do so here
    # see https://render.com/docs/deploy-spring-boot#add-additional-routes
    # for more details
    healthCheck:
      path: "/actuator/health"
      port: 8080
      protocol: "HTTP"
    # if you need to customize the health check endpoint, port, or protocol
    # see https://render.com/docs/deploy-spring-boot#customize-health-check
    # for more details
    # you can ignore the "build" key since we're using an image instead
    # of building from a Dockerfile
    dependsOn:
      - db

  db:
    image: "postgres:latest"
    envVars:
      - key: "POSTGRES_PASSWORD"
        value: "docker"
      - key: "POSTGRES_DB"
        value: "postgres"
    # set any other environment variables you need
    # see https://render.com/docs/deploy-postgres#configure-environment-variables
    # for more details
    healthCheck:
      path: "/healthcheck"
      port: 5432
      protocol: "TCP"
    # if you need to customize the health check endpoint, port, or protocol
    # see https://render.com/docs/deploy-postgres#customize-health-check
    # for more details
    # you can ignore the "build" key since we're using an image instead
    # of building from a Dockerfile
